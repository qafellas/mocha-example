# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read
  checks: write
  actions: read

jobs:
  mocha-tests:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up node env
        uses: actions/setup-node@v3
        with:
         node-version: '20'

      - name: Install mocha globally
        run: npm install --global mocha

      - name: Install the dependences
        run: npm install

      - name: Run mocha tests
        run: npm run test-json

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with: 
          name: Mocha Tests
          path: test-results.json
          reporter: mocha-json
          max-annotations: '30'

      - name: Read Test Report URL
        if: always()
        env:
         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jobs_url="repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs"
          json_data=$(gh api $jobs_url)
          result_url=$(echo $json_data | jq -r '.jobs[] | select(.name == "Mocha Tests") | .html_url')
          echo "TEST_RUN_HTML=$result_url" | tee -a $GITHUB_ENV

      - name : Create Json report
        if: always()
        run: node support/slackPayloadGenerator.js

      - name: Send  JSON report to Slack
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
              payload-file-path: "./jsonReporter.json"
        env:
              SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


      - name: Upload Reports
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-and-coverage-reports
          path: |
              test-results.json
     
